name: schulte-development.de | Build; deploy if main

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # having "changes" job instead of GitHub action paths filtering for being usable as pull request check
  changes:
    runs-on: ubuntu-latest
    # This job is skipped for workflow_dispatch.
    #   In GitHub actions, follow up jobs have do use "always()" plus other conditions because of this.
    #   See https://github.com/actions/runner/issues/2205 for details.
    if: github.event_name != 'workflow_dispatch'
    outputs:
      website: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@v46
        id: changed-files
        with:
          files: |
            .github/workflows/website_build-deploy.yml
            schulte-development_de/**
          files_ignore: |
            schulte-development_de/docker-compose.yml
            schulte-development_de/Dockerfile
            schulte-development_de/Makefile

  build_professional_homepage:
    runs-on: ubuntu-latest
    environment: Sonar_SchulteDev_SchulteDev:schulte-development_de
    needs: changes
    if: always() && (github.event_name == 'workflow_dispatch' || needs.changes.outputs.website == 'true')
    defaults:
      run:
        working-directory: ./schulte-development_de
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: schulte-development_de/
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: schulte-development_de/.scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4
          bundler-cache: true
          working-directory: ./schulte-development_de
      - name: Update Jekyll base URL
        # Workaround, so jekyll-seo-tag uses production url, too
        run: |
          sed -i 's|^url:.*|url: "${{ steps.pages.outputs.base_url }}"|' _config.yml
      - name: Build with Jekyll
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
      - name: Validate
        run: make validate
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: schulte-development_de/_site/

  deploy_professional_homepage:
    runs-on: ubuntu-latest
    needs: build_professional_homepage
    if: always() && needs.build_professional_homepage.result == 'success' && github.ref_name == 'main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Smoketest
        run: |
          url="${{ steps.deployment.outputs.page_url }}"
          sleep 10
          set -x
          for i in {1..10}; do
            if curl -f "$url" | grep -q "Markus Schulte: Cloud Architect &amp; Software Engineer" && \
               curl -f "${url}imprint"; then
              echo "✅ Smoketest passed"
              exit 0
            fi
            echo "Attempt $i/10 failed, retrying in 5s..."
            sleep 5
          done
          echo "❌ Smoketest failed after 60s"
          exit 1
